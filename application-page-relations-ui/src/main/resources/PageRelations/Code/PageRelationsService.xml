<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="PageRelations.Code.PageRelationsService" locale="">
  <web>PageRelations.Code</web>
  <name>PageRelationsService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>PageRelationsService</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#set ($PAGE_RELATION_CLASS = 'PageRelations.Code.PageRelationClass')

#macro (displayAddRelationForm $referent)
  {{html clean="false"}}
  &lt;form class="xformInline page-relation-add" action=""&gt;
    &lt;div class="row"&gt;
      &lt;div class="page-relation-add-suggest col-xs-12"&gt;
        #set ($parameters = {'name': 'complement', 'class': 'suggest-pages', 'placeholder': 'Select a page'})
        #suggestInput($parameters)
      &lt;/div&gt;
      &lt;div class="buttonwrapper page-relation-add-actions col-xs-12"&gt;
        &lt;input class="btn btn-primary" type="submit" value="$services.localization.render('pageRelations.add.submit')"/&gt;
        &lt;input type="button" class="btn btn-default add-relation-cancel" value="$services.localization.render('pageRelations.add.cancel')"/&gt;
        &lt;input type="hidden" name="subject" value="$subject"/&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  {{/html}}
#end

#macro(addRelation $subject $complement)
  #if ($services.csrf.isTokenValid($request.csrf) &amp;&amp; $services.security.authorization.hasAccess('edit', $subject))
    #set ($macro.page = $xwiki.getDocument($subject))
    #set ($macro.index = $macro.page.createNewObject($PAGE_RELATION_CLASS))
    #set ($macro.object = $macro.page.getObject($PAGE_RELATION_CLASS, $macro.index))
    #set ($macro.discard = $macro.object.set('page', $complement))
    #set ($discard = $macro.page.save())
    RELATION ADDED
  #else
   $response.setStatus(403)
   FORBIDDEN
  #end
#end

#macro(removeRelation $subject $complement)
  #set ($subjectReference = $services.model.resolveDocument($subject))
  #if ($services.csrf.isTokenValid($request.csrf) &amp;&amp; $services.security.authorization.hasAccess('edit', $subjectReference))
    #try()
      #set ($macro.page = $xwiki.getDocument($subjectReference))
      #set ($complementReference = $services.model.resolveDocument($complement))
      #set ($complement = $services.model.serialize($complementReference, $subjectReference))
      #set ($macro.object = $macro.page.getObject($PAGE_RELATION_CLASS, 'page', $complement))
      ## In some cases, the complement can be stored with an absolute reference in the relation even if it is in
      ## the same wiki as the subject: this can happen when exporting and importing relations between wikis.
      ## Hence if the local reference is not found, try with the absolute one.
      #if ($macro.object == $NULL)
        #set ($complement = $services.model.serialize($complementReference, 'default'))
        #set ($macro.object = $macro.page.getObject($PAGE_RELATION_CLASS, 'page', $complement))
      #end
      #if ($macro.object != $NULL)
        #set ($discard = $macro.page.removeObject($macro.object))
        #if ($discard == true)
          #set ($discard = $macro.page.save())
        #else
         $response.setStatus(404)
         $services.localization.render('pageRelations.remove.error.notFound')
        #end
      #else
        $response.setStatus(404)
        $services.localization.render('pageRelations.remove.error.notFound')
      #end
    #end
    #if ("$!exception" != '')
      $response.setStatus(500)
      $!exceptiontool.getStackTrace($exception)
    #end
  #else
   $response.setStatus(403)
   $services.localization.render('pageRelations.remove.error.notAllowed')
  #end
#end

#macro (displayRelations $subject)
  ## Get direct relations
  #set ($macro.reference = $services.model.resolveDocument($subject))
  #set ($macro.page = $xwiki.getDocument($macro.reference))
  #set ($macro.outRelations = $macro.page.getObjects($PAGE_RELATION_CLASS))
  #set ($macro.allRelations = [])
  #foreach($item in $macro.outRelations)
    #set ($macro.target = $item.getValue('page'))
    #set ($macro.isViewable = $services.security.authorization.hasAccess('view', $macro.target))
    #if ($macro.isViewable)
      #set ($macro.targetPage = $xwiki.getDocument($macro.target))
      #set ($discard = $macro.allRelations.add({'id': $macro.target, 'title': $macro.targetPage.displayTitle, 'direct': true}))
    #end
  #end
  ## Get inverse relations, querying pages which contain the current subject as a relation either with its full identifier (including
  ## the wiki name), or with an identifier that does not contain the wiki name (because the complement is in the same wiki as the subject).
  #set ($relativeSubjectId = $services.model.serialize($macro.reference, 'compactwiki'))
  #set ($query = $services.query.createQuery("type:DOCUMENT AND ((property.PageRelations.Code.PageRelationClass.page:(""$relativeSubjectId"") AND wiki:${xcontext.wiki}) OR (property.PageRelations.Code.PageRelationClass.page:""$subject""))", 'solr'))
  #set ($searchResponse = $query.execute()[0])
  ## NB: no need to perform a view access check on the results returned by Solr since the SolrQueryExecutor
  ## already performs a check on the current user.
  #foreach ($searchResult in $searchResponse.results)
    #set ($discard = $macro.allRelations.add({'id': "${searchResult.wiki}:${searchResult.fullname}", 'title': $searchResult.title_, 'direct': false}))
  #end
  ## Sort relations by title
  #set ($macro.allRelations = $collectiontool.sort($macro.allRelations, 'title'))

  {{html clean="false"}}
  &lt;ul&gt;
  #foreach ($item in $macro.allRelations)
    #if ($item.direct == true)
      #set ($macro.subject = $macro.reference)
      #set ($macro.complement = $item.id)
    #else
      #set ($macro.subject = $item.id)
      #set ($macro.complement = $macro.reference)
    #end
    #set ($macro.isRemovable = $services.security.authorization.hasAccess('edit', $macro.subject))
    &lt;li class="page-relations-term-li"&gt;
      &lt;div class="page-relations-term-container"&gt;
        &lt;span class="page-relations-term wikilink"&gt;
          &lt;a href="$xwiki.getURL($item.id)"&gt;$item.title&lt;/a&gt;
        &lt;/span&gt;
        #if ($macro.isRemovable)
        &lt;span class="page-relations-term-action-remove"&gt;&lt;a href="#" data-subject="$escapetool.xml($macro.subject)" data-complement="$escapetool.xml($macro.complement)"&gt;x&lt;/a&gt;&lt;/span&gt;
        #end
      &lt;/div&gt;
    &lt;/li&gt;
  #end
  &lt;/ul&gt;
  {{/html}}

#end

{{/velocity}}

{{velocity output="true"}}
#set ($action = "$!{request.action}")
#set ($subject = "$!request.subject")
#if ($action == 'get-relations')
  #displayRelations($subject)
#elseif ($action == 'get-add-relation-form')
  #displayAddRelationForm($xreferent)
#elseif ($action == 'add-relation')
  #set ($complement = "$!request.complement")
  #addRelation($subject, $complement)
#elseif ($action == 'remove-relation')
  #set ($complement = "$!request.complement")
  #removeRelation($subject, $complement)
#end
{{/velocity}}
</content>
</xwikidoc>
