<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="PageRelations.Code.JSX" locale="">
  <web>PageRelations.Code</web>
  <name>JSX</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1525856730000</creationDate>
  <parent>dev:PageRelations.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1525863682000</date>
  <contentUpdateDate>1525856730000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>PageRelations.Code.JSX</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>5eabc799-fdf9-4a34-abe9-b172bc356110</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>// ======================================
// Ajax relation editing
//
var XWiki = (function (XWiki) {
  
// Start XWiki augmentation.
var viewers = XWiki.viewers = XWiki.viewers || {};

/**
 * Relation editing.
 */
viewers.PageRelations = Class.create({
  /**
   * Initialization: add listeners for all relation actions, to perform them via AJAX
   */
  initialize : function() {
    // delete relations
    $$('.page-relations .page-relation-delete').each(this.ajaxRelationDelete);
    $$('.page-relations .page-relation-add a').each(this.createRelationAddForm.bind(this));
    if ($$('.page-relations .page-relation-add-form').length &gt; 0) {
      this.ajaxifyForm($$('.page-relations .page-relation-add-form')[0]);
    }
  },
  /** AJAX relation removal */
  ajaxRelationDelete : function (item) {
    item.observe('click', function(event) {
      if (event) {
        event.stop();
      }
      if (!item.disabled) {
        new Ajax.Request(
          item.readAttribute('href').replace(/&amp;xredirect=.+$/, "&amp;ajax=1&amp;xpage=plain"),
          {
            onCreate : function () {
              // ignore "cascade" clicks
              item.disabled = true;
              item.notification = new XWiki.widgets.Notification("Deleting relation...", "inprogress");
            },
            onSuccess : function () {
              // delete the corresponding element
              item.up('.page-relation-wrapper').remove();
            },
            onFailure : function (response) {
               new XWiki.widgets.Notification(response.responseText || 'Server not responding', "error");
            },
            // 0 is returned for network failures, except on IE where a strange large number (12031) is returned.
            on0 : function(response) {
              response.request.options.onFailure(response);
            },
            onComplete : function () {
              item.disabled = false;
              item.notification.hide();
            }
          }
        );
      }
    }.bindAsEventListener());
  },
  createRelationAddForm : function (item) {
    item.observe('click', function(event) {
      if (event) {
        event.stop();
      }
      if (!item._x_form) {
        if (!item.disabled) {
          new Ajax.Request(
            item.readAttribute('href').replace(/#.+$/, "&amp;ajax=1&amp;xpage=plain"),
            {
              onCreate : function () {
                // ignore "cascade" clicks
                item.disabled = true;
                item.notification = new XWiki.widgets.Notification("Fetching form...", "inprogress");
              },
              onSuccess : function (response) {
                var iParent = item.up();
                item.remove();
                iParent.update(response.responseText);
                item._x_form = iParent.firstDescendant();
                item._x_form._x_activator = item;
                item._x_form.down('input[type=text]').focus();
                this.ajaxifyForm(item._x_form);
              }.bind(this),
              onFailure : function (response) {
                new XWiki.widgets.Notification(response.responseText || 'Server not responding', "error");
              },
              // 0 is returned for network failures, except on IE where a strange large number (12031) is returned.
              on0 : function(response) {
                response.request.options.onFailure(response);
              },
              onComplete : function () {
                item.disabled = false;
                item.notification.hide();
              }
            }
          );
        }
      } else {
        Element.replace(item, item._x_form);
        item._x_form.down('input[type=text]').focus();
      }
    }.bindAsEventListener(this));
  },
  ajaxifyForm : function(form) {
    form.setAttribute('autocomplete', 'off');
    form.down('input[type=text]').setAttribute('autocomplete', 'off');
    form.down('input[type=text]').setAttribute('autocomplete', 'off');
    form.observe('submit', function(event) {
      event.stop();
      form.down('input[type=text]').focus();
      if (form['page-relation'].value != '') {
        new Ajax.Request(
          form.action.replace(/&amp;xredirect=.+$/, '&amp;ajax=1&amp;page-relation=') + encodeURIComponent(form['page-relation'].value),
          {
            onCreate : function () {
              // ignore "cascade" clicks
              form.disable();
              form.notification = new XWiki.widgets.Notification("Adding relation...", "inprogress");
            },
            onSuccess : function (response) {
              var wrapper = new Element('span');
              wrapper.insert(response.responseText + ' ');
              wrapper.select('.page-relation-delete').each(this.ajaxRelationDelete);
              while (wrapper.childNodes.length &gt; 0) {
                form.up('.page-relation-add').insert({before : wrapper.firstChild});
                form.up('.page-relation-add').insert({before : ' '});
                wrapper.removeChild(wrapper.firstChild);
              }
              form.reset();
            }.bind(this),
            onFailure : function (response) {
              new XWiki.widgets.Notification(response.responseText || 'Server not responding', "error");
            },
            onComplete : function () {
              form.enable();
              form.notification.hide();
            },
            // 0 is returned for network failures, except on IE where a strange large number (12031) is returned.
            on0 : function(response) {
              response.request.options.onFailure(response);
            }
          }
        );
      }
    }.bindAsEventListener(this));
    form.observe('reset', function(event) {
      Element.replace(form, form._x_activator);
    }.bindAsEventListener(this));
    // Replace the Cancel link (which is supposed to 
    var cancel = new Element("input", {type: "reset", value : form.down('.button-add-page-relation-cancel').innerHTML, "class" : "button secondary"});
    form.down('.button-add-page-relation-cancel').replace(cancel);

    new XWiki.widgets.Suggest(form.down('input[type=text]'), {
      script: "${xwiki.getURL('PageRelations.Code.Suggest', 'view', 'xpage=plain&amp;outputSyntax=plain')}&amp;",
      varname: 'input',
      shownoresults : false,
      icon: "${xwiki.getSkinFile('icons/silk/page_white_text.png')}"
    });
  }
});

function init() {
  return new viewers.PageRelations();
}

// When the document is loaded, trigger the Relations enhancements.
(XWiki.domIsLoaded &amp;&amp; init())
|| document.observe("xwiki:dom:loaded", init);

// End XWiki augmentation.
return XWiki;
}(XWiki || {}));
</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
