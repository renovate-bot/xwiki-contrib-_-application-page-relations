<?xml version="1.1" encoding="UTF-8"?>

<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<xwikidoc version="1.3" reference="Graph.Code.VertexLens" locale="">
  <web>Graph.Code</web>
  <name>VertexLens</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>VertexLens</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>Graph.Code.VertexLens</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>dd77841a-1e57-4b86-90a1-c95565cc67ff</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>// - Customizes Main.SolrSearch JSX in order to send the get request to a custom search service instead of the current page
// - Adds edge addition / removal capabitilies
// TODO: we should load Main.SolrSearch JSX separately and get the functions added to something like an XWiki.Solr namespace so that they can get called
// from other scripts.

// TODO: Make sure all CSS elements have a prefix such as "graph"

require.config({
  paths: {
    'xwiki-selectize': "$xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.js', true)" +
      "?v=$escapetool.url($xwiki.version)"
  }
});

#set ($serviceId = "${services.graph.namespace}.EdgeService")
#set ($graphServiceUrl = "$xwiki.getURL($serviceId)")
#set ($suggestionUrl = "$graphServiceUrl?action=get-suggestions&amp;xpage=plain&amp;outputSyntax=plain")

define('xwiki-suggestPages', ['jquery', 'xwiki-selectize'], function($) {
  var getSettings = function(select) {
    return {
      maxItems: 1,
      persist: false,
      load: function(typedText, callback) {
        var selectize = select[0].selectize;
        var form = $(select).closest("form");
        var relation = form.find("select[name='relation']").val();
        $.getJSON("$suggestionUrl", {
          text: typedText,
          relation: relation
        }).done(
          function(response) {
            selectize.clearOptions();
            callback(response);
          }).fail(
            function(response) {
            callback(response);
          }
        );
      },
      // Create a fake score function so that Selectize does not filter the received data.
      score: function() {
        return function() {
          return 1;
        }
      }
    };
  };

  $.fn.suggestPages = function(settings) {
    return this.each(function() {
      $(this).xwikiSelectize($.extend(getSettings($(this)), settings));
    });
  };
});

require(['jquery', 'xwiki-suggestPages', 'xwiki-events-bridge'], function($) {
  var init = function(event, data) {
    ## We load the existing SolrSearch JavaScript functions that will be needed
    #set ($code = $xwiki.getDocument('Main.SolrSearch').getObject('XWiki.JavaScriptExtension').getValue('code'))
    ## Remove require clause beginning and end
    #set ($idx = $code.indexOf('{'))
    #set ($code = $code.substring($mathtool.add($idx,1)))
    #set ($code = $code.substring(0, $mathtool.sub($code.length(),3)))
    ## remove the last upper call to "enhanceSearchUI();" because we want the function redefined here to be called instead, but not all upper calls (especially not the one in updateSearchUI, hence we use a fragile regex)
    #set ($code = $code.replaceAll('\n\s\senhanceSearchUI\(\);', ''))
    $code

    var getEdges = function() {
      var origin = XWiki.Model.serialize(XWiki.currentDocument.getDocumentReference());
      $("#graph-edges").html("&lt;img src='$xwiki.getSkinFile('icons/xwiki/spinner.gif')'/&gt;");
      sendRequest("get-edges", origin, null, null, "html").done(function(data) {
        $("#graph-edges").html(data);
        enhanceSearchUI();
      });
    }

    var createNewEdgeForm = function(formHtmlString, parentListItem) {
      // Keep the content of the list item in order to restore it later on
      parentListItem.html(formHtmlString);
      var form = parentListItem.find("form");
      form.submit(function(event) {
        event.preventDefault();
        // TODO: ignore cascade clicks by disabling the form
        var input = form.find(".xwiki-selectize-option");
        var destination = input.data('value');
        var origin = form.find("input[name='origin']").val();
        var relation = form.find("select[name='relation']").val();
        var notification = new XWiki.widgets.Notification("Adding edge...", "inprogress");
        sendRequest("add-edge", origin, relation, destination, "plain").done(function (data) {
          form.remove();
          notification.hide();
          getEdges();
        });
      });
      var cancelButton = form.find(".add-edge-cancel");
      cancelButton.click(function() {
        form.remove();
        getEdges();
      });
      $('.suggest-pages').suggestPages();
      var selectized = $('.suggest-pages');
      selectized[0].selectize.focus();
    }

    var removeEdge = function(origin, relation, destination) {
      sendRequest("remove-edge", origin, relation, destination, "plain").done(function (data) {
        // TODO: we may remove the edge manually instead, since Solr indexing update takes a few more milliseconds.
        // Also, we don't want the UI to be completely reset (pagination index, active facets etc.)
        getEdges();
      });
    }

    // TODO: add CSRF
    var sendRequest = function(action, origin, relation, destination, outputSyntax) {
      return $.ajax({
        type: "post",
        url: "$graphServiceUrl",
        data: {
          action: action,
          origin: origin,
          relation: relation,
          destination: destination,
          xpage: "plain",
          outputSyntax: outputSyntax
        },
        cache: false,
      });
    }

    getEdges();

    /** Returns the service to be called to perform the real search: either XWiki.Graph.Search for more or less standard search, 
     * or XWiki.Graph.Service (for edge search) */
    var getSearchServiceDocument = function() {
      var currentDocumentReference = XWiki.currentDocument.getDocumentReference();
      var wiki = currentDocumentReference.extractReference(XWiki.EntityType.WIKI).name;
      var searchReference = XWiki.Model.resolve(wiki +':${services.graph.getNamespace('root')}.Search', XWiki.EntityType.DOCUMENT);
      if (currentDocumentReference.equals(searchReference)) {
        return new XWiki.Document(searchReference);
      }
      // TODO reference with other references instead of strings, with relative references possibly
      var serviceReference = XWiki.Model.resolve(wiki +':${services.graph.namespace}.EdgeService', XWiki.EntityType.DOCUMENT);
      return new XWiki.Document(serviceReference);
    }

    searchRequest = null;

    // Overriding in order to define a custom enpoint for the search request
    pushSearchUIState = function(viewURL) {
      //console.log(viewURL)
      // If there is a request in progress, abort it to prevent its callback from being called.
      searchRequest &amp;&amp; searchRequest.abort();
      $('.search-ui').attr('aria-busy', true);
      var searchServiceDocument = getSearchServiceDocument();
      var getURL = searchServiceDocument.getURL('get', getQueryString(viewURL));
      searchRequest = $.get(getURL).done(function(html) {
        var state = getSearchUIState();
        updateSearchUI(html);
        setSearchUIState(state);
        window.history.replaceState &amp;&amp; window.history.replaceState(state, document.title);
        // Make sure the browser address bar reflects the new state (and thus the new state can be bookmarked).
        window.history.pushState &amp;&amp; window.history.pushState(state, document.title, viewURL);
      });
    };

    // overrides for custom search endpoint, but not sure if it's really called, TODO: check
    $(window).on('popstate', function(event) {
      // If there is a request in progress, abort it to prevent its callback from being called.
      searchRequest &amp;&amp; searchRequest.abort();
      $('.search-ui').attr('aria-busy', true);
      var state = event.originalEvent.state;
      var searchServiceDocument = getSearchServiceDocument();
      var getURL = searchServiceDocument.getURL('get', window.location.search.substr(1));
      searchRequest = $.get(getURL).done(function(html) {
        updateSearchUI(html);
        setSearchUIState(state);
      });
    });

    // Overrides the function defined in Main.SolrSearch
    // This function adds interaction to the search results UI. It is overridden for adding interactions to the list of edge: delete a edge, add a edge,
    // and to show the facets upon click on the filter button
    enhanceSearchUI = function() {
      $('.search-filter-button').click(function(event) {
        // prevent reloading the page
        event.preventDefault();
        $('.search-facets').toggle('display');
      });
      $('.search-result-highlightAll').each(enhanceSearchResultHighlights);
      $('.search-facets').each(enhanceSearchFacets);
      $([
        '.search-results-sort a.sort-item',
        '.search-options a.options-item',
        '.pagination a',
        '.controlPagination a',
        'a.search-facets-action-reset',
        '.search-facet a.itemName',
        '.search-facet-body a.more',
        '.search-facet-body .selectedLocation a'
      ].join(',')).click(reloadSearchUI);

        $(".graph-delete-edge").click(function(event) {
          var origin = $(this).data("origin");
          var relation = $(this).data("relation");
          var destination = $(this).data("destination");
          // This is a trick for the case when we list inverse edges, since we can't get the edge relation or destination easily at the moment in that case.
          if (!destination) {
            destination = XWiki.Model.serialize(XWiki.currentDocument.getDocumentReference());
          }
          removeEdge(origin, relation, destination);
        });
        $("a.graph-add-edge").click(function(event) {
          event.preventDefault();
          var origin = $(this).data("origin");
          var parentListItem = $(this).closest("li");
          // We want the form to wrap if needed, and we cannot add this rule properly directly in the generated list item at the moment (wiki syntax), so we add this rule in JavaScript. FIXME
          parentListItem.css('white-space', 'normal');
          // TODO: handle fail and other ajax responses
          // TODO: localize
          var notification = new XWiki.widgets.Notification("Fetching form...", "inprogress");
          sendRequest('get-add-edge-form', origin, null, null, "html").done(function (data) {
            notification.hide();
            createNewEdgeForm(data, parentListItem);
          })
        });
    };
  };

  // NB: dont't fire init on "xwiki:dom:updated" or it will reload the edges each time a facet is applied (since it fires dom updates)
  $(document).on('xwiki:dom:loaded', init);
  XWiki.domIsLoaded &amp;&amp; init();
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Graph.Code.VertexLens</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>70a222fc-8c33-4c60-b097-474005994091</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>// Hack to let the facet panel (which has an absolute position) expand and overflow
#xwikicontent {
  overflow: visible;
}

.xcontent {
  hr {
    margin-bottom: 0;
  }
  .search-results-container {
    margin-top: 0;
  }
}

a.sort-item {
  margin-right: 0.5em;
  margin-left: 0.5em;
}

.search-results-sort li {
  padding-left: 0.5em;
}

.search-results {
   ul {
    display: inline;
    list-style-type: none;
    margin-left: 0;
    padding-left: 0;
    line-height: 2em;
     li  {
       padding-left: 0;
       display: inline;
       margin-right: 0.5em;
       font-size: 1.1em;
       span.wikilink {
         .btn {
           padding: 0px 3px;
         }
       }
       p {
         margin: 0 0 0.3em 0;
         span {
           background-color: #d0dfee;
           border: 1px solid transparent;
           border-radius: 5px 5px 5px 5px;
           display: inline;
           padding: 1px 4px 2px;
           position: relative;
           margin-top: 4px;
           font-size: 1em;
           a {text-decoration: none;}
           &amp;.graph-delete-edge {
             background-color: inherit;
             padding: 0.5px;
           }
         }
       }
     }
  }

  li form.add-edge {
    display: block;
    margin-top: 0.5em;
    background: #f1f1f1;
    position: absolute;
    padding: 0.7em;
    z-index: 3;
    min-width: 60%;
    border: 1px solid #ddd;
  }
}

// Overrides SolrSearch SSX to display facets even on small screens
@media (max-width: 768px) {
  .search-facets.collapsed-xs .search-facets-header .xHint,
  .search-facets.collapsed-xs .search-facets-actions,
  .search-facets.collapsed-xs .search-facet {
    display: block;
  }
}

// Add some rules so that facets are hidden by default, they are meant to get visible only upon user action
.search-facets {
  position: absolute;
  // set to 3 to display the widget above the footer as well
  z-index: 3;
  // This should be computed dynamically to display the panel just below the filter button
  top: 4em;
  left: 1em;
  display: none;
}


.graph-delete-edge:hover {
  cursor: pointer;
}

#document-title input {
  width: 100%;
  border: 1px #eee solid;
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
