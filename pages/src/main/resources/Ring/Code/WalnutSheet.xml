<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Ring.Code.WalnutSheet" locale="">
  <web>Ring.Code</web>
  <name>WalnutSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="CKEditor.VelocityMacros"/}}

{{velocity}}
## This sheet allows to switch quickly from view to edition, and displays the list of rings on the side, together with an image if there is any attached to the page.
#if ($doc.fullName != "${services.ring.namespace}.WalnutSheet")
#set ($rings = $services.ring.getRingsFrom($doc.documentReference))
#set ($attachments = $doc.getAttachmentList())
#set ($images = [])
#set ($col1 = 8)
#set ($col2 = 4)
#foreach ($attachment in $attachments)
  #if ($attachment.isImage())
    #set ($discard = $images.add($attachment))
  #end
#end
#if ($images.size() &gt; 0)
  #set ($col1 = 6)
  #set ($col2 = 3)
  #set ($image = $images.get(0))
#end
(% class="row" style="margin-top: 1em;" %)(((
  (% class="col-md-$col1 col-xs-12" %)(((
    ## TODO: FIXME: in the current situation, the content is present twice in the page: 1) as a non-editable block and 2) in CKEDITOR.
    ## Find a way to have it only once.
    ## Mark the block as editable only if the user has edit right. The "editable" class is then selected in JavaScript to replace the block by an editor on click.
    ## TODO: we need a way to query dynamically XWiki in JavaScript to know if a document is locked, because we need to prevent edition in case the document was edited
    ## after the page was loaded. Also, we need to warn the user that the document was updated and that a refresh is needed.
    (% id="main-content-view" data-editable="$hasEdit" data-locked="$tdoc.locked" data-context-path="${request.contextPath}" %)(((
      $tdoc.content
    )))
    ## Insert an editor (hidden by default) only if the current user has edit right.
    #if ($hasEdit)
      #set ($discard = $xwiki.ssx.use("${services.ring.namespace}.TermSheet"))
      #set ($discard = $xwiki.jsx.use("${services.ring.namespace}.TermSheet"))

      (% id="main-content-edit" %)(((
        {{html clean="false"}}
          ## Block copied from edit.vm in order to set up a form, with some hidden parameters
          &lt;form id="edit" method="post" action="$doc.getURL('preview')" class="withLock form"&gt;
            ## CSRF prevention
            &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
            ## It's a hack for updating the title from the title field
            &lt;input type="hidden" name="title" value="$tdoc.title" /&gt;
            ## Check if we want async or not
            ## &lt;input type="hidden" name="async" value="$escapetool.xml($async)" /&gt;

            ## Block copied from CKEditor.EditSheet (+ inclusion of CKEditor.VelocityMacros at the top).
            ## See also: https://extensions.xwiki.org/xwiki/bin/view/Extension/CKEditor%20Integration/
            #set ($parameters = {
              'content': $tdoc.content,
              'attributes': {
                'id': 'content',
                'name': 'content',
                'rows': 50,
                'cols': 80
              }
            })
            #ckeditor($parameters)
            ## Action buttons, copied from editactions.vm, with the following changes:
            ## - Remove "Save and continue" and "Preview"
            ## - Set save action name explicitely (instead of variable "$saveaction")
            ## - Add a distinct cancel button so that the form does not get submitted
            ## - NB: the listener for the saveandcontinue action is located in actionButtons.js
            &lt;div class="bottom-editor"&gt;
              $xwiki.jsfx.use('js/xwiki/actionbuttons/actionButtons.js', true)
              $xwiki.ssfx.use('js/xwiki/actionbuttons/actionButtons.css', true)
              #set ($keyboardShortcutsEnabled = ($editor != 'wysiwyg'))
              &lt;div class="buttons"&gt;
                #editActionButton('saveandcontinue', 'save', 'btn-primary')
                #editActionButton('abort', 'cancel', 'btn-primary')

                &lt;span class="meta-versionSummary metamodifs"&gt;
                  &lt;input type="hidden" name="xeditaction" value="$!xcontext.action" /&gt;
                  #if ((!$commentFieldAdded) &amp;&amp; $xwiki.hasEditComment())
                    #set ($commentFieldAdded = 1)
                    #if ($xwiki.isEditCommentFieldHidden())
                      &lt;input type="hidden" name="comment" id="comment" value="$!{escapetool.xml($request.comment)}" /&gt;
                    #else
                      &lt;label class="hidden" for="commentinput"&gt;$services.localization.render('core.comment')&lt;/label&gt;
                      &lt;input type="text" name="comment" id="commentinput" value="$!{escapetool.xml($request.comment)}" size="40"
                        title="$services.localization.render('core.comment.tooltip')" placeholder="$services.localization.render('core.comment.hint')" /&gt;
                    #end
                  #end
                  #if ((!$tdoc.isNew()) &amp;&amp; (!$minorFieldAdded) &amp;&amp; ($xwiki.hasMinorEdit()))
                    #set ($minorFieldAdded = 1)
                    &lt;span class="meta-minorEdit text-nowrap"&gt;
                      &lt;input type="checkbox" name="minorEdit" id="minorEdit" #if($request.minorEdit)checked="checked" #end/&gt;
                      &lt;label for="minorEdit"&gt;$services.localization.render('core.minoredit')&lt;/label&gt;
                    &lt;/span&gt;
                  #end
                &lt;/span&gt; ## meta-versionSummary
              &lt;/div&gt; ## buttons
            &lt;/div&gt;
          &lt;/form&gt;
        {{/html}}
      )))
    #end ##end $hasEdit
  )))
  (% class="col-md-$col2 col-xs-12" %)(((
    #foreach ($ring in $rings)
      #set ($relation = $xwiki.getDocument($ring.getRelation()))
      #set ($relatum = $ring.getRelatum())
      #set ($value = $ring.getValue())
      #if ($relatum)
        #set ($dest = $xwiki.getDocument($relatum))
        * $relation.translatedDocument.title [[$dest.translatedDocument.title&gt;&gt;$dest.fullName]]
      #else
        * $relation.translatedDocument.title $value
      #end
    #end
    ----
    #set ($discard = $xwiki.ssx.use('Main.SolrSearch'))
    #set ($discard = $xwiki.ssx.use("${services.ring.namespace}.RingLens"))
    #set ($discard = $xwiki.jsx.use("${services.ring.namespace}.RingLens"))
    (% id="rings" %)((()))
  )))
  #if ($image)
  (% class="col-md-3 col-xs-12 text-center" %)(((
    [[image:$doc.fullName@$image.filename]]
  )))
  #end
)))
#end
{{/velocity}}</content>
  <object>
    <name>Ring.Code.WalnutSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a0e4c2ec-8998-40ae-88ad-e0b91b0c7d1f</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-ckeditor'], function($) {
  'use strict';

  $(document).ready(function() {

    function focusOn(input) {
      input.attr("hidden", false);
      input.focus();
      var length = input.val().length;
      input[0].setSelectionRange(length, length);
    }

    function focusOut(titleElement) {
      var span = titleElement.find("span");
      var input = titleElement.find("input");
      var value = input.val();
      span.text(value);
      input.attr("hidden", true);
      span.attr("hidden", false);
      // It's a hack for saving the updated title while submitting the form
      // TODO: either have the form include the title, or consider using HTML5 ability to handle inputs outside a form
      $("form#edit input[name='title']").val(value);
      
    }

    // Check that user has edit right by checking the existence of a block "#main-content-view.editable" in the page
    // TODO: replace this check by adding dynamically a class "editable" to the title, but this requires creating a custom skin and we don't want to add this constraint.
    // TODO: check lock, take it, release it
    var editableBlock = $("#main-content-view[data-editable='true']");
    if (editableBlock.length) {
      // Replace the h1 text by a h1 input on click
      var h1 = $("#document-title h1");
      h1.click(function() {
        // TODO: check if user has edit right
        // if it's the first click, replace text by an input
        var $this = $(this);
        var value = $this.text();
        var input = $this.find('input');
        var span = $this.find('span');
        if (input.length == 0) {
          // replace &lt;h1&gt;text&lt;/h1&gt; by &lt;h1&gt;&lt;span&gt;text&lt;/span&gt;&lt;input value="text"/&gt;
          $this.text("");
          // TODO: escape
          var span = $("&lt;span&gt;" + value + "&lt;/span&gt;");
          span.attr("hidden", true);
          $this.append(span);

          var input = $("&lt;input name='title' value='"+ value + "' /&gt;")
          $this.append(input);
          input.keypress(function(event) {
            if (event.which == 13)
              focusOut($this)
          });
          focusOn(input);
        } else {
          // the title is already transformed, just focus on the input
          // don't focus at the end of the range because this prevents from selecting the title easily,
          // for instance to launch a search on it
          span.attr("hidden", true);
          input.attr("hidden", false);
          input.focus();
        }
      });
      h1.focusout(function() {
        focusOut($(this));
      });
    }

    var editDiv = $("#main-content-edit");
    editDiv.hide();
    // Toggle CKEDITOR on click
    // Wait for the CKEDITOR to be ready
    // TODO: listen to the specific CKEDITOR content instance, not to all instances
    // TODO: if the user clicks before the ckeditor is ready, display a loading icon and continue when the editor is loaded indeed
    CKEDITOR.on('instanceReady', function() {
      $("#main-content-view[data-editable='true']").click(function() {
        var that = $(this);
        var isLocked = that.data('locked');
        if (isLocked) {
          alert("Document is already locked");
          return;
        }
        // TODO: check if the context path can be obtained from the XWiki JavaScript object directly
        var contextPath = that.data('context-path');
        // Load the lock.js library if it was not already
        if (XWiki.EditLock == undefined) {
          var script = document.createElement('script');
          script.onload = function () {
            // The document is locked upon script initialization, so we don't need to lock it additionally on script load
            showEditor();
          };
          script.src = contextPath + "/resources/uicomponents/lock/lock.js";
          document.head.appendChild(script);
        } else {
          XWiki.EditLock.lock();
          showEditor();
        }

        function showEditor() {
          that.hide();
          // TODO: take lock on page
          editDiv.show();
          // TODO: check why the textarea "rows" attribute is not taken into account when the editor is hidden and then displayed,
          // while it is when the editor is displayed directly.
          var editor = CKEDITOR.instances.content;
          editor.resize('100%', 600);
          // Set caret position, so that content can be directly modified
          // TODO: not sure "POSITION_BEFORE_START" is the right option to be used
          var range = editor.createRange();
          range.moveToPosition( range.root, CKEDITOR.POSITION_BEFORE_START );
          editor.getSelection().selectRanges( [ range ] );
          editor.focus();
          // We use blur rather than focusout in order to capture parent losing focus
          // Commented out for now since we prefer that the user explicitely save the content
          //editor.on("blur", function() {
          $("input[name='action_abort']").click(function(event) {
            // TODO: release the lock
            // Prevent submitting the form
            event.preventDefault();
            // Capture the editor data and display it
            var data = editor.getData();
            that.html(data);
            that.show();
            editDiv.hide();
            XWiki.EditLock.unlock();
          });
        }
      });
    });
  });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Ring.Code.WalnutSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>00305cae-6ee6-479f-8f7e-a2966fffcbec</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#editMeta input {
  border: 0;
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
